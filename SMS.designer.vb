'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34014
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="SMS")>  _
Partial Public Class SMSDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertStudent(instance As Student)
    End Sub
  Partial Private Sub UpdateStudent(instance As Student)
    End Sub
  Partial Private Sub DeleteStudent(instance As Student)
    End Sub
  Partial Private Sub Insertfee(instance As fee)
    End Sub
  Partial Private Sub Updatefee(instance As fee)
    End Sub
  Partial Private Sub Deletefee(instance As fee)
    End Sub
  Partial Private Sub InsertTeacher(instance As Teacher)
    End Sub
  Partial Private Sub UpdateTeacher(instance As Teacher)
    End Sub
  Partial Private Sub DeleteTeacher(instance As Teacher)
    End Sub
  Partial Private Sub InsertUser(instance As User)
    End Sub
  Partial Private Sub UpdateUser(instance As User)
    End Sub
  Partial Private Sub DeleteUser(instance As User)
    End Sub
  Partial Private Sub InsertAssessment(instance As Assessment)
    End Sub
  Partial Private Sub UpdateAssessment(instance As Assessment)
    End Sub
  Partial Private Sub DeleteAssessment(instance As Assessment)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.School_Management_System.My.MySettings.Default.SMSConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Students() As System.Data.Linq.Table(Of Student)
		Get
			Return Me.GetTable(Of Student)
		End Get
	End Property
	
	Public ReadOnly Property fees() As System.Data.Linq.Table(Of fee)
		Get
			Return Me.GetTable(Of fee)
		End Get
	End Property
	
	Public ReadOnly Property Teachers() As System.Data.Linq.Table(Of Teacher)
		Get
			Return Me.GetTable(Of Teacher)
		End Get
	End Property
	
	Public ReadOnly Property Users() As System.Data.Linq.Table(Of User)
		Get
			Return Me.GetTable(Of User)
		End Get
	End Property
	
	Public ReadOnly Property Assessments() As System.Data.Linq.Table(Of Assessment)
		Get
			Return Me.GetTable(Of Assessment)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Students")>  _
Partial Public Class Student
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StudentID As Integer
	
	Private _Registration_No As String
	
	Private _Full_Name As String
	
	Private _Gender As String
	
	Private _Age As System.Nullable(Of Integer)
	
	Private _Ressedential_Address As String
	
	Private _Permanent_Address As String
	
	Private _Contact_No As String
	
	Private _Email_ID As String
	
	Private _Class As String
	
	Private _Stream As String
	
	Private _Picture As String
	
	Private _Registration_Date As System.Nullable(Of Date)
	
	Private _Blood_Group As String
	
	Private _Mother_name As String
	
	Private _mother_occ As String
	
	Private _mother_contact As String
	
	Private _mother_salary As System.Nullable(Of Double)
	
	Private _father_name As String
	
	Private _father_occ As String
	
	Private _father_contact As String
	
	Private _father_salary As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStudentIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnStudentIDChanged()
    End Sub
    Partial Private Sub OnRegistration_NoChanging(value As String)
    End Sub
    Partial Private Sub OnRegistration_NoChanged()
    End Sub
    Partial Private Sub OnFull_NameChanging(value As String)
    End Sub
    Partial Private Sub OnFull_NameChanged()
    End Sub
    Partial Private Sub OnGenderChanging(value As String)
    End Sub
    Partial Private Sub OnGenderChanged()
    End Sub
    Partial Private Sub OnAgeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAgeChanged()
    End Sub
    Partial Private Sub OnRessedential_AddressChanging(value As String)
    End Sub
    Partial Private Sub OnRessedential_AddressChanged()
    End Sub
    Partial Private Sub OnPermanent_AddressChanging(value As String)
    End Sub
    Partial Private Sub OnPermanent_AddressChanged()
    End Sub
    Partial Private Sub OnContact_NoChanging(value As String)
    End Sub
    Partial Private Sub OnContact_NoChanged()
    End Sub
    Partial Private Sub OnEmail_IDChanging(value As String)
    End Sub
    Partial Private Sub OnEmail_IDChanged()
    End Sub
    Partial Private Sub OnClassChanging(value As String)
    End Sub
    Partial Private Sub OnClassChanged()
    End Sub
    Partial Private Sub OnStreamChanging(value As String)
    End Sub
    Partial Private Sub OnStreamChanged()
    End Sub
    Partial Private Sub OnPictureChanging(value As String)
    End Sub
    Partial Private Sub OnPictureChanged()
    End Sub
    Partial Private Sub OnRegistration_DateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRegistration_DateChanged()
    End Sub
    Partial Private Sub OnBlood_GroupChanging(value As String)
    End Sub
    Partial Private Sub OnBlood_GroupChanged()
    End Sub
    Partial Private Sub OnMother_nameChanging(value As String)
    End Sub
    Partial Private Sub OnMother_nameChanged()
    End Sub
    Partial Private Sub Onmother_occChanging(value As String)
    End Sub
    Partial Private Sub Onmother_occChanged()
    End Sub
    Partial Private Sub Onmother_contactChanging(value As String)
    End Sub
    Partial Private Sub Onmother_contactChanged()
    End Sub
    Partial Private Sub Onmother_salaryChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Onmother_salaryChanged()
    End Sub
    Partial Private Sub Onfather_nameChanging(value As String)
    End Sub
    Partial Private Sub Onfather_nameChanged()
    End Sub
    Partial Private Sub Onfather_occChanging(value As String)
    End Sub
    Partial Private Sub Onfather_occChanged()
    End Sub
    Partial Private Sub Onfather_contactChanging(value As String)
    End Sub
    Partial Private Sub Onfather_contactChanged()
    End Sub
    Partial Private Sub Onfather_salaryChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Onfather_salaryChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StudentID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property StudentID() As Integer
		Get
			Return Me._StudentID
		End Get
		Set
			If ((Me._StudentID = value)  _
						= false) Then
				Me.OnStudentIDChanging(value)
				Me.SendPropertyChanging
				Me._StudentID = value
				Me.SendPropertyChanged("StudentID")
				Me.OnStudentIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Registration No]", Storage:="_Registration_No", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Registration_No() As String
		Get
			Return Me._Registration_No
		End Get
		Set
			If (String.Equals(Me._Registration_No, value) = false) Then
				Me.OnRegistration_NoChanging(value)
				Me.SendPropertyChanging
				Me._Registration_No = value
				Me.SendPropertyChanged("Registration_No")
				Me.OnRegistration_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Full Name]", Storage:="_Full_Name", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Full_Name() As String
		Get
			Return Me._Full_Name
		End Get
		Set
			If (String.Equals(Me._Full_Name, value) = false) Then
				Me.OnFull_NameChanging(value)
				Me.SendPropertyChanging
				Me._Full_Name = value
				Me.SendPropertyChanged("Full_Name")
				Me.OnFull_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gender", DbType:="NVarChar(50)")>  _
	Public Property Gender() As String
		Get
			Return Me._Gender
		End Get
		Set
			If (String.Equals(Me._Gender, value) = false) Then
				Me.OnGenderChanging(value)
				Me.SendPropertyChanging
				Me._Gender = value
				Me.SendPropertyChanged("Gender")
				Me.OnGenderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Age", DbType:="Int")>  _
	Public Property Age() As System.Nullable(Of Integer)
		Get
			Return Me._Age
		End Get
		Set
			If (Me._Age.Equals(value) = false) Then
				Me.OnAgeChanging(value)
				Me.SendPropertyChanging
				Me._Age = value
				Me.SendPropertyChanged("Age")
				Me.OnAgeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Ressedential Address]", Storage:="_Ressedential_Address", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property Ressedential_Address() As String
		Get
			Return Me._Ressedential_Address
		End Get
		Set
			If (String.Equals(Me._Ressedential_Address, value) = false) Then
				Me.OnRessedential_AddressChanging(value)
				Me.SendPropertyChanging
				Me._Ressedential_Address = value
				Me.SendPropertyChanged("Ressedential_Address")
				Me.OnRessedential_AddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Permanent Address]", Storage:="_Permanent_Address", DbType:="NVarChar(MAX)")>  _
	Public Property Permanent_Address() As String
		Get
			Return Me._Permanent_Address
		End Get
		Set
			If (String.Equals(Me._Permanent_Address, value) = false) Then
				Me.OnPermanent_AddressChanging(value)
				Me.SendPropertyChanging
				Me._Permanent_Address = value
				Me.SendPropertyChanged("Permanent_Address")
				Me.OnPermanent_AddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Contact No]", Storage:="_Contact_No", DbType:="NVarChar(50)")>  _
	Public Property Contact_No() As String
		Get
			Return Me._Contact_No
		End Get
		Set
			If (String.Equals(Me._Contact_No, value) = false) Then
				Me.OnContact_NoChanging(value)
				Me.SendPropertyChanging
				Me._Contact_No = value
				Me.SendPropertyChanged("Contact_No")
				Me.OnContact_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Email ID]", Storage:="_Email_ID", DbType:="NVarChar(300)")>  _
	Public Property Email_ID() As String
		Get
			Return Me._Email_ID
		End Get
		Set
			If (String.Equals(Me._Email_ID, value) = false) Then
				Me.OnEmail_IDChanging(value)
				Me.SendPropertyChanging
				Me._Email_ID = value
				Me.SendPropertyChanged("Email_ID")
				Me.OnEmail_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Class", Storage:="_Class", DbType:="NVarChar(50)")>  _
	Public Property [Class]() As String
		Get
			Return Me._Class
		End Get
		Set
			If (String.Equals(Me._Class, value) = false) Then
				Me.OnClassChanging(value)
				Me.SendPropertyChanging
				Me._Class = value
				Me.SendPropertyChanged("[Class]")
				Me.OnClassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stream", DbType:="NVarChar(50)")>  _
	Public Property Stream() As String
		Get
			Return Me._Stream
		End Get
		Set
			If (String.Equals(Me._Stream, value) = false) Then
				Me.OnStreamChanging(value)
				Me.SendPropertyChanging
				Me._Stream = value
				Me.SendPropertyChanged("Stream")
				Me.OnStreamChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Picture", DbType:="NVarChar(500)")>  _
	Public Property Picture() As String
		Get
			Return Me._Picture
		End Get
		Set
			If (String.Equals(Me._Picture, value) = false) Then
				Me.OnPictureChanging(value)
				Me.SendPropertyChanging
				Me._Picture = value
				Me.SendPropertyChanged("Picture")
				Me.OnPictureChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Registration Date]", Storage:="_Registration_Date", DbType:="Date")>  _
	Public Property Registration_Date() As System.Nullable(Of Date)
		Get
			Return Me._Registration_Date
		End Get
		Set
			If (Me._Registration_Date.Equals(value) = false) Then
				Me.OnRegistration_DateChanging(value)
				Me.SendPropertyChanging
				Me._Registration_Date = value
				Me.SendPropertyChanged("Registration_Date")
				Me.OnRegistration_DateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Blood Group]", Storage:="_Blood_Group", DbType:="NVarChar(50)")>  _
	Public Property Blood_Group() As String
		Get
			Return Me._Blood_Group
		End Get
		Set
			If (String.Equals(Me._Blood_Group, value) = false) Then
				Me.OnBlood_GroupChanging(value)
				Me.SendPropertyChanging
				Me._Blood_Group = value
				Me.SendPropertyChanged("Blood_Group")
				Me.OnBlood_GroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Mother name]", Storage:="_Mother_name", DbType:="NVarChar(500)")>  _
	Public Property Mother_name() As String
		Get
			Return Me._Mother_name
		End Get
		Set
			If (String.Equals(Me._Mother_name, value) = false) Then
				Me.OnMother_nameChanging(value)
				Me.SendPropertyChanging
				Me._Mother_name = value
				Me.SendPropertyChanged("Mother_name")
				Me.OnMother_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[mother occ]", Storage:="_mother_occ", DbType:="NVarChar(50)")>  _
	Public Property mother_occ() As String
		Get
			Return Me._mother_occ
		End Get
		Set
			If (String.Equals(Me._mother_occ, value) = false) Then
				Me.Onmother_occChanging(value)
				Me.SendPropertyChanging
				Me._mother_occ = value
				Me.SendPropertyChanged("mother_occ")
				Me.Onmother_occChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[mother contact]", Storage:="_mother_contact", DbType:="NVarChar(50)")>  _
	Public Property mother_contact() As String
		Get
			Return Me._mother_contact
		End Get
		Set
			If (String.Equals(Me._mother_contact, value) = false) Then
				Me.Onmother_contactChanging(value)
				Me.SendPropertyChanging
				Me._mother_contact = value
				Me.SendPropertyChanged("mother_contact")
				Me.Onmother_contactChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[mother salary]", Storage:="_mother_salary", DbType:="Float")>  _
	Public Property mother_salary() As System.Nullable(Of Double)
		Get
			Return Me._mother_salary
		End Get
		Set
			If (Me._mother_salary.Equals(value) = false) Then
				Me.Onmother_salaryChanging(value)
				Me.SendPropertyChanging
				Me._mother_salary = value
				Me.SendPropertyChanged("mother_salary")
				Me.Onmother_salaryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[father name]", Storage:="_father_name", DbType:="NVarChar(500)")>  _
	Public Property father_name() As String
		Get
			Return Me._father_name
		End Get
		Set
			If (String.Equals(Me._father_name, value) = false) Then
				Me.Onfather_nameChanging(value)
				Me.SendPropertyChanging
				Me._father_name = value
				Me.SendPropertyChanged("father_name")
				Me.Onfather_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[father occ]", Storage:="_father_occ", DbType:="NVarChar(50)")>  _
	Public Property father_occ() As String
		Get
			Return Me._father_occ
		End Get
		Set
			If (String.Equals(Me._father_occ, value) = false) Then
				Me.Onfather_occChanging(value)
				Me.SendPropertyChanging
				Me._father_occ = value
				Me.SendPropertyChanged("father_occ")
				Me.Onfather_occChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[father contact]", Storage:="_father_contact", DbType:="NVarChar(50)")>  _
	Public Property father_contact() As String
		Get
			Return Me._father_contact
		End Get
		Set
			If (String.Equals(Me._father_contact, value) = false) Then
				Me.Onfather_contactChanging(value)
				Me.SendPropertyChanging
				Me._father_contact = value
				Me.SendPropertyChanged("father_contact")
				Me.Onfather_contactChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[father salary]", Storage:="_father_salary", DbType:="Float")>  _
	Public Property father_salary() As System.Nullable(Of Double)
		Get
			Return Me._father_salary
		End Get
		Set
			If (Me._father_salary.Equals(value) = false) Then
				Me.Onfather_salaryChanging(value)
				Me.SendPropertyChanging
				Me._father_salary = value
				Me.SendPropertyChanged("father_salary")
				Me.Onfather_salaryChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.fees")>  _
Partial Public Class fee
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Registration_No As String
	
	Private _Full_Name As String
	
	Private _Class As String
	
	Private _Fee As System.Nullable(Of Decimal)
	
	Private _Fee_paid As System.Nullable(Of Decimal)
	
	Private _Balance As System.Nullable(Of Decimal)
	
	Private _Status As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnRegistration_NoChanging(value As String)
    End Sub
    Partial Private Sub OnRegistration_NoChanged()
    End Sub
    Partial Private Sub OnFull_NameChanging(value As String)
    End Sub
    Partial Private Sub OnFull_NameChanged()
    End Sub
    Partial Private Sub OnClassChanging(value As String)
    End Sub
    Partial Private Sub OnClassChanged()
    End Sub
    Partial Private Sub OnFeeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFeeChanged()
    End Sub
    Partial Private Sub OnFee_paidChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFee_paidChanged()
    End Sub
    Partial Private Sub OnBalanceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBalanceChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Registration No]", Storage:="_Registration_No", DbType:="NVarChar(50)")>  _
	Public Property Registration_No() As String
		Get
			Return Me._Registration_No
		End Get
		Set
			If (String.Equals(Me._Registration_No, value) = false) Then
				Me.OnRegistration_NoChanging(value)
				Me.SendPropertyChanging
				Me._Registration_No = value
				Me.SendPropertyChanged("Registration_No")
				Me.OnRegistration_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Full Name]", Storage:="_Full_Name", DbType:="NVarChar(100)")>  _
	Public Property Full_Name() As String
		Get
			Return Me._Full_Name
		End Get
		Set
			If (String.Equals(Me._Full_Name, value) = false) Then
				Me.OnFull_NameChanging(value)
				Me.SendPropertyChanging
				Me._Full_Name = value
				Me.SendPropertyChanged("Full_Name")
				Me.OnFull_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Class", Storage:="_Class", DbType:="NVarChar(50)")>  _
	Public Property [Class]() As String
		Get
			Return Me._Class
		End Get
		Set
			If (String.Equals(Me._Class, value) = false) Then
				Me.OnClassChanging(value)
				Me.SendPropertyChanging
				Me._Class = value
				Me.SendPropertyChanged("[Class]")
				Me.OnClassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fee", DbType:="Decimal(18,2)")>  _
	Public Property Fee() As System.Nullable(Of Decimal)
		Get
			Return Me._Fee
		End Get
		Set
			If (Me._Fee.Equals(value) = false) Then
				Me.OnFeeChanging(value)
				Me.SendPropertyChanging
				Me._Fee = value
				Me.SendPropertyChanged("Fee")
				Me.OnFeeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fee_paid", DbType:="Decimal(18,2)")>  _
	Public Property Fee_paid() As System.Nullable(Of Decimal)
		Get
			Return Me._Fee_paid
		End Get
		Set
			If (Me._Fee_paid.Equals(value) = false) Then
				Me.OnFee_paidChanging(value)
				Me.SendPropertyChanging
				Me._Fee_paid = value
				Me.SendPropertyChanged("Fee_paid")
				Me.OnFee_paidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Balance", DbType:="Decimal(18,2)")>  _
	Public Property Balance() As System.Nullable(Of Decimal)
		Get
			Return Me._Balance
		End Get
		Set
			If (Me._Balance.Equals(value) = false) Then
				Me.OnBalanceChanging(value)
				Me.SendPropertyChanging
				Me._Balance = value
				Me.SendPropertyChanged("Balance")
				Me.OnBalanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(50)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Teachers")>  _
Partial Public Class Teacher
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _staff_id As String
	
	Private _full_name As String
	
	Private _gender As String
	
	Private _age As System.Nullable(Of Integer)
	
	Private _desingnation As String
	
	Private _Picture As String
	
	Private _Address As String
	
	Private _Contact_No As String
	
	Private _email_ID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub Onstaff_idChanging(value As String)
    End Sub
    Partial Private Sub Onstaff_idChanged()
    End Sub
    Partial Private Sub Onfull_nameChanging(value As String)
    End Sub
    Partial Private Sub Onfull_nameChanged()
    End Sub
    Partial Private Sub OngenderChanging(value As String)
    End Sub
    Partial Private Sub OngenderChanged()
    End Sub
    Partial Private Sub OnageChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnageChanged()
    End Sub
    Partial Private Sub OndesingnationChanging(value As String)
    End Sub
    Partial Private Sub OndesingnationChanged()
    End Sub
    Partial Private Sub OnPictureChanging(value As String)
    End Sub
    Partial Private Sub OnPictureChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnContact_NoChanging(value As String)
    End Sub
    Partial Private Sub OnContact_NoChanged()
    End Sub
    Partial Private Sub Onemail_IDChanging(value As String)
    End Sub
    Partial Private Sub Onemail_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[staff id]", Storage:="_staff_id", DbType:="NVarChar(50)")>  _
	Public Property staff_id() As String
		Get
			Return Me._staff_id
		End Get
		Set
			If (String.Equals(Me._staff_id, value) = false) Then
				Me.Onstaff_idChanging(value)
				Me.SendPropertyChanging
				Me._staff_id = value
				Me.SendPropertyChanged("staff_id")
				Me.Onstaff_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[full name]", Storage:="_full_name", DbType:="NVarChar(100)")>  _
	Public Property full_name() As String
		Get
			Return Me._full_name
		End Get
		Set
			If (String.Equals(Me._full_name, value) = false) Then
				Me.Onfull_nameChanging(value)
				Me.SendPropertyChanging
				Me._full_name = value
				Me.SendPropertyChanged("full_name")
				Me.Onfull_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gender", DbType:="NVarChar(50)")>  _
	Public Property gender() As String
		Get
			Return Me._gender
		End Get
		Set
			If (String.Equals(Me._gender, value) = false) Then
				Me.OngenderChanging(value)
				Me.SendPropertyChanging
				Me._gender = value
				Me.SendPropertyChanged("gender")
				Me.OngenderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_age", DbType:="Int")>  _
	Public Property age() As System.Nullable(Of Integer)
		Get
			Return Me._age
		End Get
		Set
			If (Me._age.Equals(value) = false) Then
				Me.OnageChanging(value)
				Me.SendPropertyChanging
				Me._age = value
				Me.SendPropertyChanged("age")
				Me.OnageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_desingnation", DbType:="NVarChar(50)")>  _
	Public Property desingnation() As String
		Get
			Return Me._desingnation
		End Get
		Set
			If (String.Equals(Me._desingnation, value) = false) Then
				Me.OndesingnationChanging(value)
				Me.SendPropertyChanging
				Me._desingnation = value
				Me.SendPropertyChanged("desingnation")
				Me.OndesingnationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Picture", DbType:="NVarChar(500)")>  _
	Public Property Picture() As String
		Get
			Return Me._Picture
		End Get
		Set
			If (String.Equals(Me._Picture, value) = false) Then
				Me.OnPictureChanging(value)
				Me.SendPropertyChanging
				Me._Picture = value
				Me.SendPropertyChanged("Picture")
				Me.OnPictureChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(MAX)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Contact No]", Storage:="_Contact_No", DbType:="NVarChar(50)")>  _
	Public Property Contact_No() As String
		Get
			Return Me._Contact_No
		End Get
		Set
			If (String.Equals(Me._Contact_No, value) = false) Then
				Me.OnContact_NoChanging(value)
				Me.SendPropertyChanging
				Me._Contact_No = value
				Me.SendPropertyChanged("Contact_No")
				Me.OnContact_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[email ID]", Storage:="_email_ID", DbType:="NVarChar(MAX)")>  _
	Public Property email_ID() As String
		Get
			Return Me._email_ID
		End Get
		Set
			If (String.Equals(Me._email_ID, value) = false) Then
				Me.Onemail_IDChanging(value)
				Me.SendPropertyChanging
				Me._email_ID = value
				Me.SendPropertyChanged("email_ID")
				Me.Onemail_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Users")>  _
Partial Public Class User
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _UserName As String
	
	Private _Password As String
	
	Private _FullName As String
	
	Private _UserPicture As String
	
	Private _AccessLevel As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnUserNameChanged()
    End Sub
    Partial Private Sub OnPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnPasswordChanged()
    End Sub
    Partial Private Sub OnFullNameChanging(value As String)
    End Sub
    Partial Private Sub OnFullNameChanged()
    End Sub
    Partial Private Sub OnUserPictureChanging(value As String)
    End Sub
    Partial Private Sub OnUserPictureChanged()
    End Sub
    Partial Private Sub OnAccessLevelChanging(value As Integer)
    End Sub
    Partial Private Sub OnAccessLevelChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me.OnUserNameChanging(value)
				Me.SendPropertyChanging
				Me._UserName = value
				Me.SendPropertyChanged("UserName")
				Me.OnUserNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Password", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Password() As String
		Get
			Return Me._Password
		End Get
		Set
			If (String.Equals(Me._Password, value) = false) Then
				Me.OnPasswordChanging(value)
				Me.SendPropertyChanging
				Me._Password = value
				Me.SendPropertyChanged("Password")
				Me.OnPasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FullName", DbType:="VarChar(100)")>  _
	Public Property FullName() As String
		Get
			Return Me._FullName
		End Get
		Set
			If (String.Equals(Me._FullName, value) = false) Then
				Me.OnFullNameChanging(value)
				Me.SendPropertyChanging
				Me._FullName = value
				Me.SendPropertyChanged("FullName")
				Me.OnFullNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserPicture", DbType:="VarChar(500)")>  _
	Public Property UserPicture() As String
		Get
			Return Me._UserPicture
		End Get
		Set
			If (String.Equals(Me._UserPicture, value) = false) Then
				Me.OnUserPictureChanging(value)
				Me.SendPropertyChanging
				Me._UserPicture = value
				Me.SendPropertyChanged("UserPicture")
				Me.OnUserPictureChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccessLevel", DbType:="Int NOT NULL")>  _
	Public Property AccessLevel() As Integer
		Get
			Return Me._AccessLevel
		End Get
		Set
			If ((Me._AccessLevel = value)  _
						= false) Then
				Me.OnAccessLevelChanging(value)
				Me.SendPropertyChanging
				Me._AccessLevel = value
				Me.SendPropertyChanged("AccessLevel")
				Me.OnAccessLevelChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Assessments")>  _
Partial Public Class Assessment
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Registration_No As String
	
	Private _Full_Name As String
	
	Private _Class As String
	
	Private _Stream As String
	
	Private _Subject As String
	
	Private _FA1 As System.Nullable(Of Decimal)
	
	Private _FA2 As System.Nullable(Of Decimal)
	
	Private _SA1 As System.Nullable(Of Decimal)
	
	Private _Total1 As System.Nullable(Of Decimal)
	
	Private _FA3 As System.Nullable(Of Decimal)
	
	Private _FA4 As System.Nullable(Of Decimal)
	
	Private _SA2 As System.Nullable(Of Decimal)
	
	Private _Total2 As System.Nullable(Of Decimal)
	
	Private _TotalFA As System.Nullable(Of Decimal)
	
	Private _TotalSA As System.Nullable(Of Decimal)
	
	Private _Total As System.Nullable(Of Decimal)
	
	Private _GPA As System.Nullable(Of Decimal)
	
	Private _Grade As String
	
	Private _Position As String
	
	Private _Remark As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnRegistration_NoChanging(value As String)
    End Sub
    Partial Private Sub OnRegistration_NoChanged()
    End Sub
    Partial Private Sub OnFull_NameChanging(value As String)
    End Sub
    Partial Private Sub OnFull_NameChanged()
    End Sub
    Partial Private Sub OnClassChanging(value As String)
    End Sub
    Partial Private Sub OnClassChanged()
    End Sub
    Partial Private Sub OnStreamChanging(value As String)
    End Sub
    Partial Private Sub OnStreamChanged()
    End Sub
    Partial Private Sub OnSubjectChanging(value As String)
    End Sub
    Partial Private Sub OnSubjectChanged()
    End Sub
    Partial Private Sub OnFA1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFA1Changed()
    End Sub
    Partial Private Sub OnFA2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFA2Changed()
    End Sub
    Partial Private Sub OnSA1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSA1Changed()
    End Sub
    Partial Private Sub OnTotal1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotal1Changed()
    End Sub
    Partial Private Sub OnFA3Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFA3Changed()
    End Sub
    Partial Private Sub OnFA4Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFA4Changed()
    End Sub
    Partial Private Sub OnSA2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSA2Changed()
    End Sub
    Partial Private Sub OnTotal2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotal2Changed()
    End Sub
    Partial Private Sub OnTotalFAChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotalFAChanged()
    End Sub
    Partial Private Sub OnTotalSAChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotalSAChanged()
    End Sub
    Partial Private Sub OnTotalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotalChanged()
    End Sub
    Partial Private Sub OnGPAChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnGPAChanged()
    End Sub
    Partial Private Sub OnGradeChanging(value As String)
    End Sub
    Partial Private Sub OnGradeChanged()
    End Sub
    Partial Private Sub OnPositionChanging(value As String)
    End Sub
    Partial Private Sub OnPositionChanged()
    End Sub
    Partial Private Sub OnRemarkChanging(value As String)
    End Sub
    Partial Private Sub OnRemarkChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Registration_No", DbType:="NVarChar(50)")>  _
	Public Property Registration_No() As String
		Get
			Return Me._Registration_No
		End Get
		Set
			If (String.Equals(Me._Registration_No, value) = false) Then
				Me.OnRegistration_NoChanging(value)
				Me.SendPropertyChanging
				Me._Registration_No = value
				Me.SendPropertyChanged("Registration_No")
				Me.OnRegistration_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Full_Name", DbType:="NVarChar(100)")>  _
	Public Property Full_Name() As String
		Get
			Return Me._Full_Name
		End Get
		Set
			If (String.Equals(Me._Full_Name, value) = false) Then
				Me.OnFull_NameChanging(value)
				Me.SendPropertyChanging
				Me._Full_Name = value
				Me.SendPropertyChanged("Full_Name")
				Me.OnFull_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Class", Storage:="_Class", DbType:="NVarChar(50)")>  _
	Public Property [Class]() As String
		Get
			Return Me._Class
		End Get
		Set
			If (String.Equals(Me._Class, value) = false) Then
				Me.OnClassChanging(value)
				Me.SendPropertyChanging
				Me._Class = value
				Me.SendPropertyChanged("[Class]")
				Me.OnClassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stream", DbType:="NVarChar(50)")>  _
	Public Property Stream() As String
		Get
			Return Me._Stream
		End Get
		Set
			If (String.Equals(Me._Stream, value) = false) Then
				Me.OnStreamChanging(value)
				Me.SendPropertyChanging
				Me._Stream = value
				Me.SendPropertyChanged("Stream")
				Me.OnStreamChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subject", DbType:="NVarChar(50)")>  _
	Public Property Subject() As String
		Get
			Return Me._Subject
		End Get
		Set
			If (String.Equals(Me._Subject, value) = false) Then
				Me.OnSubjectChanging(value)
				Me.SendPropertyChanging
				Me._Subject = value
				Me.SendPropertyChanged("Subject")
				Me.OnSubjectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FA1", DbType:="Decimal(18,0)")>  _
	Public Property FA1() As System.Nullable(Of Decimal)
		Get
			Return Me._FA1
		End Get
		Set
			If (Me._FA1.Equals(value) = false) Then
				Me.OnFA1Changing(value)
				Me.SendPropertyChanging
				Me._FA1 = value
				Me.SendPropertyChanged("FA1")
				Me.OnFA1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FA2", DbType:="Decimal(18,0)")>  _
	Public Property FA2() As System.Nullable(Of Decimal)
		Get
			Return Me._FA2
		End Get
		Set
			If (Me._FA2.Equals(value) = false) Then
				Me.OnFA2Changing(value)
				Me.SendPropertyChanging
				Me._FA2 = value
				Me.SendPropertyChanged("FA2")
				Me.OnFA2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA1", DbType:="Decimal(18,0)")>  _
	Public Property SA1() As System.Nullable(Of Decimal)
		Get
			Return Me._SA1
		End Get
		Set
			If (Me._SA1.Equals(value) = false) Then
				Me.OnSA1Changing(value)
				Me.SendPropertyChanging
				Me._SA1 = value
				Me.SendPropertyChanged("SA1")
				Me.OnSA1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total1", DbType:="Decimal(18,0)")>  _
	Public Property Total1() As System.Nullable(Of Decimal)
		Get
			Return Me._Total1
		End Get
		Set
			If (Me._Total1.Equals(value) = false) Then
				Me.OnTotal1Changing(value)
				Me.SendPropertyChanging
				Me._Total1 = value
				Me.SendPropertyChanged("Total1")
				Me.OnTotal1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FA3", DbType:="Decimal(18,0)")>  _
	Public Property FA3() As System.Nullable(Of Decimal)
		Get
			Return Me._FA3
		End Get
		Set
			If (Me._FA3.Equals(value) = false) Then
				Me.OnFA3Changing(value)
				Me.SendPropertyChanging
				Me._FA3 = value
				Me.SendPropertyChanged("FA3")
				Me.OnFA3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FA4", DbType:="Decimal(18,0)")>  _
	Public Property FA4() As System.Nullable(Of Decimal)
		Get
			Return Me._FA4
		End Get
		Set
			If (Me._FA4.Equals(value) = false) Then
				Me.OnFA4Changing(value)
				Me.SendPropertyChanging
				Me._FA4 = value
				Me.SendPropertyChanged("FA4")
				Me.OnFA4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA2", DbType:="Decimal(18,0)")>  _
	Public Property SA2() As System.Nullable(Of Decimal)
		Get
			Return Me._SA2
		End Get
		Set
			If (Me._SA2.Equals(value) = false) Then
				Me.OnSA2Changing(value)
				Me.SendPropertyChanging
				Me._SA2 = value
				Me.SendPropertyChanged("SA2")
				Me.OnSA2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total2", DbType:="Decimal(18,0)")>  _
	Public Property Total2() As System.Nullable(Of Decimal)
		Get
			Return Me._Total2
		End Get
		Set
			If (Me._Total2.Equals(value) = false) Then
				Me.OnTotal2Changing(value)
				Me.SendPropertyChanging
				Me._Total2 = value
				Me.SendPropertyChanged("Total2")
				Me.OnTotal2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalFA", DbType:="Decimal(18,0)")>  _
	Public Property TotalFA() As System.Nullable(Of Decimal)
		Get
			Return Me._TotalFA
		End Get
		Set
			If (Me._TotalFA.Equals(value) = false) Then
				Me.OnTotalFAChanging(value)
				Me.SendPropertyChanging
				Me._TotalFA = value
				Me.SendPropertyChanged("TotalFA")
				Me.OnTotalFAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalSA", DbType:="Decimal(18,0)")>  _
	Public Property TotalSA() As System.Nullable(Of Decimal)
		Get
			Return Me._TotalSA
		End Get
		Set
			If (Me._TotalSA.Equals(value) = false) Then
				Me.OnTotalSAChanging(value)
				Me.SendPropertyChanging
				Me._TotalSA = value
				Me.SendPropertyChanged("TotalSA")
				Me.OnTotalSAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total", DbType:="Decimal(18,0)")>  _
	Public Property Total() As System.Nullable(Of Decimal)
		Get
			Return Me._Total
		End Get
		Set
			If (Me._Total.Equals(value) = false) Then
				Me.OnTotalChanging(value)
				Me.SendPropertyChanging
				Me._Total = value
				Me.SendPropertyChanged("Total")
				Me.OnTotalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GPA", DbType:="Decimal(18,0)")>  _
	Public Property GPA() As System.Nullable(Of Decimal)
		Get
			Return Me._GPA
		End Get
		Set
			If (Me._GPA.Equals(value) = false) Then
				Me.OnGPAChanging(value)
				Me.SendPropertyChanging
				Me._GPA = value
				Me.SendPropertyChanged("GPA")
				Me.OnGPAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grade", DbType:="NVarChar(50)")>  _
	Public Property Grade() As String
		Get
			Return Me._Grade
		End Get
		Set
			If (String.Equals(Me._Grade, value) = false) Then
				Me.OnGradeChanging(value)
				Me.SendPropertyChanging
				Me._Grade = value
				Me.SendPropertyChanged("Grade")
				Me.OnGradeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Position", DbType:="NVarChar(50)")>  _
	Public Property Position() As String
		Get
			Return Me._Position
		End Get
		Set
			If (String.Equals(Me._Position, value) = false) Then
				Me.OnPositionChanging(value)
				Me.SendPropertyChanging
				Me._Position = value
				Me.SendPropertyChanged("Position")
				Me.OnPositionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remark", DbType:="NVarChar(50)")>  _
	Public Property Remark() As String
		Get
			Return Me._Remark
		End Get
		Set
			If (String.Equals(Me._Remark, value) = false) Then
				Me.OnRemarkChanging(value)
				Me.SendPropertyChanging
				Me._Remark = value
				Me.SendPropertyChanged("Remark")
				Me.OnRemarkChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
